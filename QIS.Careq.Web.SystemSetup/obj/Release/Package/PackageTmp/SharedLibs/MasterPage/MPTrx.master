<%@ Master Language="C#" MasterPageFile="~/Libs/MasterPage/MPMain.Master" AutoEventWireup="true" 
    CodeBehind="MPTrx.master.cs" Inherits="QIS.Careq.Web.CommonLibs.MasterPage.MPTrx" %>

<%@ Register Assembly="DevExpress.Web.v11.1, Version=11.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a"
    Namespace="DevExpress.Web.ASPxCallbackPanel" TagPrefix="dxcp" %>
<%@ Register Assembly="DevExpress.Web.v11.1, Version=11.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a"
    Namespace="DevExpress.Web.ASPxPanel" TagPrefix="dx" %>

<asp:Content ID="Content1" ContentPlaceHolderID="plhMPMain" runat="server">
    <input type="hidden" runat="server" id="hdnIsAdd" value="1" />
    <input type="hidden" runat="server" id="hdnRowCount" value="0" />
    <input type="hidden" runat="server" id="hdnPageIndex" value="-1" />
    <div class="toolbarArea">
        <ul>
            <li id="btnMPEntryNew" runat="server"><img src='<%=ResolveUrl("~/Libs/Images/Icon/tbnew.png")%>' alt="" /><div><%=GetLabel("New")%></div></li>
            <li id="btnMPEntrySave" runat="server"><img src='<%=ResolveUrl("~/Libs/Images/Icon/tbsave.png")%>' alt="" /><div><%=GetLabel("Save")%></div></li>
            <li id="btnMPEntryVoid" runat="server"><img src='<%=ResolveUrl("~/Libs/Images/Icon/tbvoid.png")%>' alt="" /><div><%=GetLabel("Void")%></div></li>
            <li id="btnMPEntryPrev" runat="server"><img src='<%=ResolveUrl("~/Libs/Images/Icon/tbback.png")%>' alt="" /><div><%=GetLabel("Prev")%></div></li>
            <li id="btnMPEntryNext" runat="server"><img src='<%=ResolveUrl("~/Libs/Images/Icon/tbnext.png")%>' alt="" /><div><%=GetLabel("Next")%></div></li>
        </ul>
    </div>
    <div style="padding:12px;">  
        <script type="text/javascript">
            window.setIsAdd = function (isAdd) {
                if (isAdd)
                    $('#<%=hdnIsAdd.ClientID %>').val('1');
                else {
                    var $group = $('#fsMPEntry');
                    var result = true;
                    $group.find(':[IsEditAbleInEditMode=0]').each(function (i, item) {
                        if ($(item)[0].tagName == 'SELECT')
                            $(item).attr('disabled', 'disabled');
                        else if ($(item)[0].tagName == 'SPAN')
                            $(item).find('input').attr('disabled', 'disabled');
                        else if ($(item)[0].tagName == 'LABEL')
                            $(item).attr('class', 'lblDisabled');
                        else
                            $(item).attr('readonly', 'readonly');
                    });
                    $group.find(':[IsEditAbleInEditMode=1]').each(function (i, item) {
                        if ($(item)[0].tagName == 'SELECT')
                            $(item).removeAttr('disabled');
                        else if ($(item)[0].tagName == 'SPAN')
                            $(item).find('input').removeAttr('disabled');
                        else if ($(item)[0].tagName == 'LABEL')
                            $(item).removeClass('lblDisabled');
                        else
                            $(item).removeAttr('readonly');
                    });
                    $('#<%=hdnIsAdd.ClientID %>').val('0');
                }
            }
            window.getIsAdd = function () {
                return ($('#<%=hdnIsAdd.ClientID %>').val() == '1');
            }

            function setPageIndex(pageIndex) {
                $('#<%=hdnPageIndex.ClientID %>').val(pageIndex);
            }

            function onMPEntryProcessSaveSuccess(param) {
                if ($('#<%=hdnIsAdd.ClientID %>').val() == '1') {
                    var rowCount = parseInt($('#<%=hdnRowCount.ClientID %>').val());
                    rowCount++;
                    $('#<%=hdnRowCount.ClientID %>').val(rowCount);
                }
                if ($('#<%=hdnIsAdd.ClientID %>').val() == '1') {
                    if (typeof onAfterSaveAddRecord == 'function')
                        onAfterSaveAddRecord(param);
                }
                else {
                    if (typeof onAfterSaveEditRecord == 'function')
                        onAfterSaveEditRecord(param);
                }
                setPageIndex(0);
                cbpMPEntryContent.PerformCallback('load');
            }

            function onMPEntryProcessVoidSuccess() {
                var rowCount = parseInt($('#<%=hdnRowCount.ClientID %>').val());
                rowCount--;
                $('#<%=hdnRowCount.ClientID %>').val(rowCount);
                   
            }

            $(function () {
                $('#<%=btnMPEntryNew.ClientID %>').click(function () {
                    cbpMPEntryContent.PerformCallback('new');
                });
                $('#<%=btnMPEntrySave.ClientID %>').click(function (evt) {
                    if (IsValid(evt, 'fsMPEntry', 'mpEntry'))
                        cbpMPEntryProcess.PerformCallback('save|' + $('#<%=hdnIsAdd.ClientID %>').val());
                });
                $('#<%=btnMPEntryVoid.ClientID %>').click(function () {
                    if (confirm('Are You Sure Want To Void?'))
                        cbpMPEntryProcess.PerformCallback('void');
                });
                $('#<%=btnMPEntryPrev.ClientID %>').click(function () {
                    cbpMPEntryContent.PerformCallback('prev');
                });
                $('#<%=btnMPEntryNext.ClientID %>').click(function () {
                    cbpMPEntryContent.PerformCallback('next');
                });

            });
        </script>
        <dxcp:ASPxCallbackPanel ID="cbpMPEntryContent" runat="server" Width="100%" ClientInstanceName="cbpMPEntryContent"
            ShowLoadingPanel="false" OnCallback="cbpMPEntryContent_Callback">
            <ClientSideEvents BeginCallback="function(s,e){
                showLoadingPanel();
            }" EndCallback="function(s,e){
                var param = s.cpParam;
                if(param == 'new' || param == 'refresh'){
                    setIsAdd(true);
                    if (typeof setRightPanelButtonEnabled == 'function')
                        setRightPanelButtonEnabled();
                }
                else if(param == 'next' || param == 'prev' || param == 'load'){
                    setIsAdd(false);
                    if (typeof setRightPanelButtonEnabled == 'function')
                        setRightPanelButtonEnabled();
                }
                setPageIndex(s.cpPageIndex);
                hideLoadingPanel();
            }" />
            <PanelCollection>
                <dx:PanelContent ID="PanelContent1" runat="server">       
                    <fieldset id="fsMPEntry">                 
                        <asp:ContentPlaceHolder ID="plhEntry" runat="server">                
                        </asp:ContentPlaceHolder>
                    </fieldset>
                </dx:PanelContent>
            </PanelCollection>
        </dxcp:ASPxCallbackPanel>

        <dxcp:ASPxCallbackPanel ID="cbpMPEntryProcess" runat="server" Width="100%" ClientInstanceName="cbpMPEntryProcess"
            ShowLoadingPanel="false" OnCallback="cbpMPEntryProcess_Callback">
            <ClientSideEvents BeginCallback="function(s,e){
                showLoadingPanel();
            }" EndCallback="function(s,e){
                var result = s.cpResult.split('|');
                if(result[0] == 'save'){
                    if(result[1] == 'success'){
                        var param = s.cpRetval;
                        //cbpMPEntryContent.PerformCallback('refresh');
                        onMPEntryProcessSaveSuccess(param);
                        alert('Save Success');
                    }
                    else
                        if(result[2] != '')
                            alert('Save Failed\nError Message : ' + result[2]);
                        else
                            alert('Save Failed');
                }
                else if(result[0] == 'void'){
                    if(result[1] == 'success'){
                        onMPEntryProcessVoidSuccess();
                        cbpMPEntryContent.PerformCallback('refresh');
                        alert('Void Success');
                    }
                    else{
                        if(result[2] != '')
                            alert('Void Failed\nError Message : ' + result[2]);
                        else
                            alert('Void Failed');
                    }
                }
                hideLoadingPanel();
            }" />
        </dxcp:ASPxCallbackPanel>
    </div>
</asp:Content>
